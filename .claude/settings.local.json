{
  "permissions": {
    "allow": [
      "Bash(gh repo create:*)",
      "Bash(git clone:*)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(echo $MCP_SERVERS)",
      "Bash(source:*)",
      "Bash(python -m pytest tests/test_canonicalization.py -v)",
      "Bash(python -m pytest tests/test_canonicalization.py -v --tb=short)",
      "Bash(python -m pytest tests/test_canonicalization.py::TestJSONCanonicalization::test_recursive_canonicalization -v)",
      "Bash(python -m pytest tests/test_canonicalization.py -q)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(python -m pytest tests/test_canonicalization_final.py -v)",
      "Bash(python -m pytest tests/test_canonicalization.py tests/test_canonicalization_final.py -q)",
      "Bash(python -m pytest tests/test_canonicalization_final.py::test_bool_not_treated_as_number_in_scalars tests/test_canonicalization_final.py::test_mixed_types_string_vs_number_vs_bool tests/test_canonicalization_final.py::test_boolean_null_ordering -v)",
      "Bash(./start_backend.sh:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(alembic revision:*)",
      "Bash(PGPASSWORD=$NEON_DB_PASSWORD psql -h $NEON_DB_HOST -U $NEON_DB_USER -d $NEON_DB_NAME -f create_schema.sql)",
      "Bash(echo \"Host: $NEON_DB_HOST\")",
      "Bash(echo \"DB: $NEON_DB_NAME\")",
      "Bash(PGPASSWORD=npg_nZ2RowvS0ODr psql -h ep-empty-frog-a2blbcz9-pooler.eu-central-1.aws.neon.tech -U neondb_owner -d neondb -f create_schema.sql)",
      "Bash(python -m pytest tests/test_ops_vertex_preflight.py -v)",
      "Bash(python -m pytest tests/test_vendor_routing.py -v)",
      "Bash(API_BASE=http://127.0.0.1:8000 ORG=test-org TEMPLATE_ID=fed2bee8-8751-4801-9cbd-e93d68cb215b ./scripts/smoke_vertex.sh)",
      "Bash(gcloud auth:*)",
      "Bash(python tests/test_vertex_grounding.py)",
      "Bash(export GOOGLE_CLOUD_PROJECT=contestra-ai)",
      "Bash(export VERTEX_LOCATION=europe-west4)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/home/leedr/.config",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/ai-ranker-adapters"
    ]
  }
}