{
  "permissions": {
    "allow": [
      "Bash(gh repo create:*)",
      "Bash(git clone:*)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(echo $MCP_SERVERS)",
      "Bash(source:*)",
      "Bash(python -m pytest tests/test_canonicalization.py -v)",
      "Bash(python -m pytest tests/test_canonicalization.py -v --tb=short)",
      "Bash(python -m pytest tests/test_canonicalization.py::TestJSONCanonicalization::test_recursive_canonicalization -v)",
      "Bash(python -m pytest tests/test_canonicalization.py -q)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(python -m pytest tests/test_canonicalization_final.py -v)",
      "Bash(python -m pytest tests/test_canonicalization.py tests/test_canonicalization_final.py -q)",
      "Bash(python -m pytest tests/test_canonicalization_final.py::test_bool_not_treated_as_number_in_scalars tests/test_canonicalization_final.py::test_mixed_types_string_vs_number_vs_bool tests/test_canonicalization_final.py::test_boolean_null_ordering -v)",
      "Bash(./start_backend.sh:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(alembic revision:*)",
      "Bash(PGPASSWORD=$NEON_DB_PASSWORD psql -h $NEON_DB_HOST -U $NEON_DB_USER -d $NEON_DB_NAME -f create_schema.sql)",
      "Bash(echo \"Host: $NEON_DB_HOST\")",
      "Bash(echo \"DB: $NEON_DB_NAME\")",
      "Bash(PGPASSWORD=npg_nZ2RowvS0ODr psql -h ep-empty-frog-a2blbcz9-pooler.eu-central-1.aws.neon.tech -U neondb_owner -d neondb -f create_schema.sql)",
      "Bash(python -m pytest tests/test_ops_vertex_preflight.py -v)",
      "Bash(python -m pytest tests/test_vendor_routing.py -v)",
      "Bash(API_BASE=http://127.0.0.1:8000 ORG=test-org TEMPLATE_ID=fed2bee8-8751-4801-9cbd-e93d68cb215b ./scripts/smoke_vertex.sh)",
      "Bash(gcloud auth:*)",
      "Bash(python tests/test_vertex_grounding.py)",
      "Bash(export GOOGLE_CLOUD_PROJECT=contestra-ai)",
      "Bash(export VERTEX_LOCATION=europe-west4)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(npx shadcn@latest init:*)",
      "Bash(uvicorn:*)",
      "Bash(npm run dev:*)",
      "Bash(npm search:*)",
      "Bash(npx playwright install:*)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(node:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(npx playwright screenshot:*)",
      "Bash(PGPASSWORD=$NEON_DB_PASSWORD psql -h $NEON_DB_HOST -U $NEON_DB_USER -d $NEON_DB_NAME -c \"ALTER TABLE batches ADD COLUMN IF NOT EXISTS org_id VARCHAR(255);\")",
      "Bash(echo:*)",
      "Read(//tmp/**)",
      "Read(//mnt/d/OneDrive/CONTESTRA/Microapps/ai-ranker/**)",
      "Read(//mnt/d/OneDrive/CONTESTRA/Microapps/ai-ranker/**)",
      "mcp__Ref__ref_search_documentation",
      "mcp__Ref__ref_read_url",
      "WebSearch",
      "Bash(cat:*)",
      "Bash(/tmp/test_als_real.sh:*)",
      "Bash(pip show:*)",
      "Bash(/tmp/test_us_6000.sh:*)",
      "Bash(/tmp/test_als_6000.sh:*)",
      "Bash(/tmp/test_batch_execution.sh:*)",
      "Bash(/tmp/test_all_countries.sh:*)",
      "Bash(/tmp/test_grounding.sh:*)",
      "Bash(/tmp/test_immutability.sh:*)",
      "Read(///**)",
      "Bash(/tmp/test_longevity.sh:*)",
      "Bash(python -m pytest tests/test_grounding_detection.py -v)",
      "Bash(python:*)",
      "Bash(PYTHONPATH=/home/leedr/ai-ranker-v2/backend python /tmp/test_grounding_fixed.py)",
      "Bash(export GOOGLE_GENAI_USE_VERTEXAI=true)",
      "Bash(PYTHONPATH=/home/leedr/ai-ranker-v2/backend python /tmp/test_longevity.py)",
      "Bash(export LLM_TIMEOUT_UN=60)",
      "Bash(export LLM_TIMEOUT_GR=180)",
      "Bash(export TEST_OPENAI_MODEL=gpt-5)",
      "Bash(export PYTHONPATH=/home/leedr/ai-ranker-v2/backend)",
      "Bash(export LLM_TIMEOUT_GR=240)",
      "Bash(export:*)",
      "Bash(timeout:*)",
      "Bash(bash:*)",
      "Bash(git restore:*)",
      "Bash(venv/bin/python:*)",
      "Bash(PYTHONPATH=:*)",
      "Bash(set -a)",
      "Bash(set +a)",
      "Bash(venv/bin/pip:*)",
      "Bash(./acceptance_check.sh:*)",
      "Bash(ALLOW_PREVIEW_COMPAT=true venv/bin/python startup_probes.py)",
      "Bash(./scripts/run_smoke.sh:*)",
      "Read(/tmp/**)",
      "Read(/tmp/**)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/home/leedr/.config",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/ai-ranker-adapters",
      "/home/leedr",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/Adapter-Copies/250826-broken-grounding",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/Adapter-Copies/250826-fixed-grounding",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/Adapter-Copies/250826-draft-rotating-proxy-v2-not-working",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/Adapter-Copies/250826-draft-rotating-proxy-v3-not-working",
      "/mnt/d/OneDrive/CONTESTRA/Microapps/Adapter-Copies",
      "/mnt/c/Users/leedr/Downloads"
    ]
  }
}